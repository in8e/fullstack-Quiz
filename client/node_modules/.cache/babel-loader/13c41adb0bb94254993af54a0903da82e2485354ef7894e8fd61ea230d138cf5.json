{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miniv\\\\Documents\\\\me\\\\code\\\\node-postgres\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"/questions\").then(res => res.json()).then(data => setData(data)).catch(error => console.log(error)).catch(console.log(data.questions));\n  }, []);\n  const shuffle = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Header\",\n      children: \"Full stack quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: data && data.length > 0 ? data.map(item => {\n        const answers = shuffle([item.correct, item.alphaincorrect, item.bravoincorrect, item.charlieincorrect]);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"questionPrompt\",\n            children: item.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answers\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: answer\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 23\n          }, this))]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created by \", /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"gitLink\",\n          href: \"https://github.com/in8e\",\n          children: \"Nate Boardman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"footerNote\",\n        children: \"This was created using React, Node, Express, and PostgreSQL.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App","data","setData","useState","useEffect","fetch","then","res","json","catch","error","console","log","questions","shuffle","array","i","length","j","Math","floor","random","map","item","answers","correct","alphaincorrect","bravoincorrect","charlieincorrect","question","answer","index","id"],"sources":["C:/Users/miniv/Documents/me/code/node-postgres/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = React.useState([])\n\n  React.useEffect(() => {\n    fetch(\"/questions\")\n      .then((res) => res.json())\n      .then((data) => setData(data))\n      .catch((error) => console.log(error))\n      .catch((console.log(data.questions)))\n}, []);\n      \n      const shuffle = (array) => {\n        for (let i = array.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n        \n      };\n        return (\n          <div className=\"pageContainer\">\n            <h1 className=\"Header\">Full stack quiz</h1>\n          <div className=\"page\">\n            {data && data.length > 0 ? (\n              data.map((item) => {\n                const answers = shuffle([item.correct, item.alphaincorrect, item.bravoincorrect, item.charlieincorrect]);\n                return (\n                  <div key={item.id}>\n                    <h2 className=\"questionPrompt\">{item.question}</h2>\n                    {answers.map((answer, index) => (\n                      <div className=\"answers\"><button key={index}>{answer}</button></div>\n                    ))}\n                    \n                  </div>\n                );\n              })\n            ) : (\n              <p>No data</p>\n            )}\n            \n          </div>\n          <div className=\"Footer\">\n            <p>Created by <a className=\"gitLink\" href=\"https://github.com/in8e\">Nate Boardman</a></p>\n            <p className=\"footerNote\">\n              \n              This was created using React, Node, Express, and PostgreSQL.\n            </p>\n          </div>\n          </div>\n        )\n    };\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;EAE1CJ,KAAK,CAACK,SAAS,CAAC,MAAM;IACpBC,KAAK,CAAC,YAAY,CAAC,CAChBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEL,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BQ,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CACpCD,KAAK,CAAEE,OAAO,CAACC,GAAG,CAACX,IAAI,CAACY,SAAS,CAAC,CAAE;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEA,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzB,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;IAC7C;IACA,OAAOD,KAAK;EAEd,CAAC;EACC,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAI,SAAS,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eAC7C;MAAK,SAAS,EAAC,MAAM;MAAA,UAClBd,IAAI,IAAIA,IAAI,CAACgB,MAAM,GAAG,CAAC,GACtBhB,IAAI,CAACqB,GAAG,CAAEC,IAAI,IAAK;QACjB,MAAMC,OAAO,GAAGV,OAAO,CAAC,CAACS,IAAI,CAACE,OAAO,EAAEF,IAAI,CAACG,cAAc,EAAEH,IAAI,CAACI,cAAc,EAAEJ,IAAI,CAACK,gBAAgB,CAAC,CAAC;QACxG,oBACE;UAAA,wBACE;YAAI,SAAS,EAAC,gBAAgB;YAAA,UAAEL,IAAI,CAACM;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAM,EAClDL,OAAO,CAACF,GAAG,CAAC,CAACQ,MAAM,EAAEC,KAAK,kBACzB;YAAK,SAAS,EAAC,SAAS;YAAA,uBAAC;cAAA,UAAqBD;YAAM,GAAdC,KAAK;cAAA;cAAA;cAAA;YAAA;UAAmB;YAAA;YAAA;YAAA;UAAA,QAC/D,CAAC;QAAA,GAJMR,IAAI,CAACS,EAAE;UAAA;UAAA;UAAA;QAAA,QAMX;MAEV,CAAC,CAAC,gBAEF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,QAEG,eACN;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QAAA,uCAAc;UAAG,SAAS,EAAC,SAAS;UAAC,IAAI,EAAC,yBAAyB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eACzF;QAAG,SAAS,EAAC,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGrB;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEZ;AAAC,GAlDIhC,GAAG;AAAA,KAAHA,GAAG;AAkDP;AAEL,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}